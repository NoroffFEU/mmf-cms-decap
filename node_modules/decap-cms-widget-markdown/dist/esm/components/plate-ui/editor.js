"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Editor = void 0;
var _react = _interopRequireDefault(require("react"));
var _cn = require("@udecode/cn");
var _plateCommon = require("@udecode/plate-common");
var _classVarianceAuthority = require("class-variance-authority");
var _react2 = require("@emotion/react");
const _excluded = ["className", "disabled", "focused", "focusRing", "readOnly", "size", "variant"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
const editorVariants = (0, _classVarianceAuthority.cva)((0, _cn.cn)('relative overflow-x-auto whitespace-pre-wrap break-words', 'min-h-[80px] w-full rounded-md bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none', '[&_[data-slate-placeholder]]:text-muted-foreground [&_[data-slate-placeholder]]:!opacity-100', '[&_[data-slate-placeholder]]:top-[auto_!important]', '[&_strong]:font-bold'), {
  variants: {
    variant: {
      outline: 'border border-input',
      ghost: ''
    },
    focused: {
      true: 'ring-2 ring-ring ring-offset-2'
    },
    disabled: {
      true: 'cursor-not-allowed opacity-50'
    },
    focusRing: {
      true: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',
      false: ''
    },
    size: {
      sm: 'text-sm',
      md: 'text-base'
    }
  },
  defaultVariants: {
    variant: 'outline',
    focusRing: true,
    size: 'sm'
  }
});
const Editor = exports.Editor = /*#__PURE__*/_react.default.forwardRef((_ref, ref) => {
  let {
      className,
      disabled,
      focused,
      focusRing,
      readOnly,
      size,
      variant
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  return (0, _react2.jsx)("div", {
    ref: ref,
    className: "relative w-full"
  }, (0, _react2.jsx)(_plateCommon.PlateContent, _extends({
    className: (0, _cn.cn)(editorVariants({
      disabled,
      focused,
      focusRing,
      size,
      variant
    }), className),
    disableDefaultStyles: true,
    readOnly: disabled !== null && disabled !== void 0 ? disabled : readOnly,
    "aria-disabled": disabled
  }, props)));
});
Editor.displayName = 'Editor';