"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buttonVariants = exports.Button = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactSlot = require("@radix-ui/react-slot");
var _cn = require("@udecode/cn");
var _classVarianceAuthority = require("class-variance-authority");
var _react2 = require("@emotion/react");
const _excluded = ["className", "isMenu", "variant", "size", "asChild"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
const buttonVariants = exports.buttonVariants = (0, _classVarianceAuthority.cva)('inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50', {
  variants: {
    variant: {
      default: 'bg-primary text-primary-foreground hover:bg-primary/90',
      destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',
      outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',
      secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',
      ghost: 'hover:bg-accent hover:text-accent-foreground',
      link: 'text-primary underline-offset-4 hover:underline',
      inlineLink: 'text-base text-primary underline underline-offset-4'
    },
    size: {
      default: 'h-10 px-4 py-2',
      xs: 'h-8 rounded-md px-3',
      sm: 'h-9 rounded-md px-3',
      sms: 'h-9 w-9 rounded-md px-0',
      lg: 'h-11 rounded-md px-8',
      icon: 'h-10 w-10',
      none: ''
    },
    isMenu: {
      true: 'h-auto w-full cursor-pointer justify-start'
    }
  },
  defaultVariants: {
    variant: 'default',
    size: 'default'
  }
});
const Button = exports.Button = (0, _cn.withRef)((_ref, ref) => {
  let {
      className,
      isMenu,
      variant,
      size,
      asChild = false
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  const Comp = asChild ? _reactSlot.Slot : 'button';
  return (0, _react2.jsx)(Comp, _extends({
    className: (0, _cn.cn)(buttonVariants({
      isMenu,
      variant,
      size,
      className
    })),
    ref: ref
  }, props));
});