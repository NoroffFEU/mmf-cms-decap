"use strict";
'use client';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CodeBlockElement = void 0;
require("./code-block-element.css");
var _react = _interopRequireDefault(require("react"));
var _cn = require("@udecode/cn");
var _plateCodeBlock = require("@udecode/plate-code-block");
var _plateCommon = require("@udecode/plate-common");
var _codeBlockCombobox = require("./code-block-combobox");
var _react2 = require("@emotion/react");
const _excluded = ["className", "children"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
const CodeBlockElement = exports.CodeBlockElement = (0, _cn.withRef)((_ref, ref) => {
  let {
      className,
      children
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  const {
    element
  } = props;
  const state = (0, _plateCodeBlock.useCodeBlockElementState)({
    element
  });
  return (0, _react2.jsx)(_plateCommon.PlateElement, _extends({
    ref: ref,
    className: (0, _cn.cn)('relative py-1', state.className, className)
  }, props), (0, _react2.jsx)("pre", {
    className: "overflow-x-auto rounded-md bg-muted px-6 py-8 font-mono text-sm leading-[normal] [tab-size:2]"
  }, (0, _react2.jsx)("code", null, children)), state.syntax && (0, _react2.jsx)("div", {
    className: "absolute right-2 top-2 z-10 select-none",
    contentEditable: false
  }, (0, _react2.jsx)(_codeBlockCombobox.CodeBlockCombobox, null)));
});